"use strict";(self.webpackChunkvault_management=self.webpackChunkvault_management||[]).push([[463],{"./components/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PButton:()=>PButton,default:()=>Button_stories});var styled_components_browser_esm=__webpack_require__("./node_modules/.pnpm/styled-components@5.3.9_biqbaboplfbrettd7655fr4n2y/node_modules/styled-components/dist/styled-components.browser.esm.js"),__jsx=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js").createElement,SButton=styled_components_browser_esm.ZP.button.withConfig({displayName:"Button__SButton",componentId:"sc-f1hl5c-0"})({borderRadius:"0.25rem",backgroundImage:"linear-gradient(to right, var(--tw-gradient-stops))","--tw-gradient-from":"#CDDC39","--tw-gradient-to":"#AFB42B","--tw-gradient-stops":"var(--tw-gradient-from), var(--tw-gradient-to)",paddingTop:"0.5rem",paddingBottom:"0.5rem",paddingLeft:"1rem",paddingRight:"1rem","--tw-text-opacity":"1",color:"rgb(255 255 255 / var(--tw-text-opacity))","--tw-shadow":"0 4px 6px -1px rgba(205, 220, 57, 0.1), 0 2px 4px -1px rgba(205, 220, 57, 0.06)","--tw-shadow-colored":"0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color)",boxShadow:"var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)",":hover":{opacity:"0.9"},":focus":{outline:"2px solid transparent",outlineOffset:"2px"}}),Button=function Button(props){return __jsx(SButton,{onClick:props.onClick},props.children)};Button.displayName="Button",Button.__docgenInfo={description:"",methods:[],displayName:"Button"};const components_Button=Button;try{FunctionComponent.displayName="Button",FunctionComponent.__docgenInfo={description:"",displayName:"Button",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"components/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}const Button_stories={title:"Button",component:components_Button,tags:["autodocs"],argTypes:{onClick:{action:"click"},children:{control:"text",defaultValue:"Click me"}}};var PButton={args:{children:"Click me"}};PButton.parameters={...PButton.parameters,docs:{...PButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Click me"\n  }\n}',...PButton.parameters?.docs?.source}}}}}]);